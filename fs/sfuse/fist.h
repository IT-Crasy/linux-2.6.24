/*
 * Copyright (c) 1997-2007 Erez Zadok <ezk@cs.stonybrook.edu>
 * Copyright (c) 2001-2007 Stony Brook University
 *
 * For specific licensing information, see the COPYING file distributed with
 * this package, or get one from
 * ftp://ftp.filesystems.org/pub/fistgen/COPYING.
 *
 * This Copyright notice must be kept intact and distributed with all
 * fistgen sources INCLUDING sources generated by fistgen.
 */
/*
 * File: fistgen/templates/Linux-2.6/fist.h
 */

#ifndef __FIST_H_
#define __FIST_H_

/*
 * KERNEL ONLY CODE:
 */
#ifdef __KERNEL__
#include <linux/version.h>
#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19)
#include <linux/config.h>
#endif /* LINUX_VERSION_CODE < KERNEL_VERSION(2,6,19) */
#include <linux/sched.h>
#include <linux/kernel.h>
#include <linux/mm.h>
#include <linux/string.h>
#include <linux/stat.h>
#include <linux/errno.h>
#include <linux/buffer_head.h>
#include <linux/smp.h>
#include <linux/smp_lock.h>
#include <linux/file.h>
#include <linux/slab.h>
#include <linux/vmalloc.h>
#include <linux/poll.h>
#include <linux/list.h>
#include <linux/init.h>
#include <linux/pagemap.h>
#include <linux/namei.h>
#include <linux/module.h>
#include <linux/mount.h>
#include <linux/seq_file.h>
#include <linux/page-flags.h>
#include <linux/writeback.h>
#include <linux/page-flags.h>
#include <linux/swap.h>

#include <asm/system.h>
#include <asm/segment.h>
#include <asm/mman.h>

/*
 * MACROS:
 */

#include "lock.h"

/* those mapped to ATTR_* were copied from linux/fs.h */
#define FA_MODE		ATTR_MODE
#define FA_UID		ATTR_UID
#define FA_GID		ATTR_GID
#define FA_SIZE		ATTR_SIZE
#define FA_ATIME	ATTR_ATIME
#define FA_MTIME	ATTR_MTIME
#define FA_CTIME	ATTR_CTIME
#define FA_ATIME_SET	ATTR_ATIME_SET
#define FA_MTIME_SET	ATTR_MTIME_SET
#define FA_FORCE	ATTR_FORCE
#define FA_ATTR_FLAGS	ATTR_ATTR_FLAG

/* must be greater than all other ATTR_* flags! */
#define FA_NLINK	2048
#define FA_BLKSIZE	4096
#define FA_BLOCKS	8192
#define FA_TIMES	(FA_ATIME|FA_MTIME|FA_CTIME)
#define FA_ALL		0

/* macros to manage changes between kernels */
#define INODE_DATA(i)	(&(i)->i_data)

#define MIN(x,y) ((x < y) ? (x) : (y))
#define MAX(x,y) ((x > y) ? (x) : (y))
#define MAXPATHLEN PATH_MAX

#ifndef SEEK_SET
# define SEEK_SET 0
#endif /* not SEEK_SET */

#ifndef SEEK_CUR
# define SEEK_CUR 1
#endif /* not SEEK_CUR */

#ifndef SEEK_END
# define SEEK_END 2
#endif /* not SEEK_END */

#ifndef DEFAULT_POLLMASK
# define DEFAULT_POLLMASK (POLLIN | POLLOUT | POLLRDNORM | POLLWRNORM)
#endif /* not DEFAULT_POLLMASK */

/* XXX: fix this so fistgen generates kfree() code directly */
#define kfree_s(a,b) kfree(a)

#ifdef FIST_MALLOC_DEBUG
extern void *sfuse_kmalloc(size_t len, int flag, int line, const char *file);
extern void sfuse_kfree(void *ptr, int line, const char *file);
extern atomic_t sfuse_malloc_counter;
# define KMALLOC(size,flag) sfuse_kmalloc((size),(flag),__LINE__,__FILE__)
# define KFREE(ptr) sfuse_kfree((ptr),__LINE__,__FILE__)
#else /* not FIST_MALLOC_DEBUG */
# define KMALLOC(a,b)	kmalloc((a),(b))
# define KFREE(a)	kfree((a))
#endif /* not FIST_MALLOC_DEBUG */

/*
 * TYPEDEFS:
 */
typedef struct file file_t;
typedef struct inode inode_t;
typedef inode_t vnode_t;
typedef struct page page_t;
typedef struct qstr qstr_t;
typedef struct super_block super_block_t;
typedef super_block_t vfs_t;
typedef struct vm_area_struct vm_area_t;


/*
 * EXTERNALS:
 */
extern int fist_debug_var;


#define EZKDBG

#define fist_get_debug_value()	-1
#define fist_set_debug_value(a)	-1
#define fist_dprint_internal(level, str, args...)
#define fist_print_dentry(a, b)
#define fist_print_inode(a, b)
#define fist_print_file(a, b)
#define fist_print_buffer_flags(a, b)
#define fist_print_page_flags(a, b)
#define fist_print_page_bytes(a, b)
#define fist_print_pte_flags(a, b)
#define fist_checkinode(a, b)
#define fist_print_sb(a, b)

#define STATIC	static
#define FISTBUG(args...)
#define dprintk(format, args...)
#define fist_dprint(level, format, args...)
#define print_entry_location()
#define print_exit_location()
#define print_exit_status(status)
#define print_exit_pointer(status)


#endif /* __KERNEL__ */


/*
 * DEFINITIONS FOR USER AND KERNEL CODE:
 * (Note: ioctl numbers 1--9 are reserved for fistgen, the rest
 *  are auto-generated automatically based on the user's .fist file.)
 */



#endif /* not __FIST_H_ */

/*
 * Local variables:
 * c-basic-offset: 4
 * End:
 */
